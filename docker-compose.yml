---
version: "3"
services:
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      PG_DATA: /data/postgres
    volumes:
      - ./postgres-order:/data/postgres
    expose:
      - "5431:5431"
    command: -p 5431
    restart: unless-stopped

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      PG_DATA: /data/postgres
    volumes:
      - ./postgres-inventory:/data/postgres
    expose:
      - "5432:5432"
    restart: unless-stopped
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  discovery-service:
    image: miftahsalam/product-service:latest
    container_name: discovery-service
    pull_policy: always
    ports:
      - "8083:8083"

  api-gateway:
    image: miftahsalam/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8084:8084"
    expose:
      - "8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - discovery-service

  product-service:
    image: miftahsalam/product-service:latest
    container_name: product-service
    pull_policy: always
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - discovery-service
      - api-gateway

  order-service:
    image: miftahsalam/order-service:latest
    container_name: order-service
    pull_policy: always
    expose:
      - "8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5431/postgres
    depends_on:
      - postgres-order
      - broker
      - discovery-service
      - api-gateway

  inventory-service:
    image: miftahsalam/inventory-service:latest
    container_name: inventory-service
    pull_policy: always
    expose:
      - "8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-inventory:5432/postgres
    depends_on:
      - postgres-inventory
      - discovery-service
      - api-gateway

  notification-service:
    image: miftahsalam/notification-service:latest
    container_name: notification-service
    pull_policy: always
    expose:
      - "8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - discovery-service
      - api-gateway
